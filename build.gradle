plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'student.management'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly{
		extendsFrom annotationProcessor
	}
}

repositories {/*外部ライブラリを何処からダウンロードしてきたか？（ここではmavenCentralから）*/
	mavenCentral()
}

processResources {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
	from('src/main/resources') {
		include '**/*.xml' // XML ファイルを含める
	}
}

processResources {
	from("src/main/resources/mapper") {
		into("mapper")
	}
}


dependencies {/*依存関係及びスターターの編集*/
	/*Spring Boot*/
	implementation 'org.springframework.boot:spring-boot-starter-web'
	/*Thymeleaf*/
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	/*Validation*/

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	/*OpenAPI Generator（ドキュメントを自動生成する。@Operationを使うだけで@PostMappingや
	GetMappingを行なった際の仕様を表示することが可能）*/

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	/*Apache commons-Lang：便利機能やユーティリティの機能を持つ。*/
	implementation 'org.apache.commons:commons-lang3:3.17.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	/*Lombok*/
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	/*MySQLドライバ*/
	runtimeOnly 'com.mysql:mysql-connector-j'

	/*MyBatis*/
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

	/*APサーバー（Tomcat）*/
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	/*SpringBoot Test*/
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web' // 必要に応じて追加
	implementation 'com.h2database:h2'

	/*H2(inMemoryDB：一時的なデータベース。データベースのテストで使用する)*/
	implementation 'com.h2database:h2:2.2.224'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
	jvmArgs = ['-Xmx1024m', '-Xms512m']
}